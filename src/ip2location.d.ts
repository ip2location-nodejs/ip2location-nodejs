export class IP2Location {
    readRow(readBytes: any, position: any): any;
    readBin(readBytes: any, position: any, readType: any, isBigInt: any): any;
    read8(position: any): any;
    read32(position: any, isBigInt: any): any;
    read32Row(position: any, buffer: any): any;
    read32Or128(position: any, ipType: any): any;
    read128(position: any): any;
    readFloatRow(position: any, buffer: any): any;
    readStr(position: any): any;
    loadBin(): boolean;
    open(binPath: any): 0 | -1;
    close(): 0 | -1;
    geoQueryData(myIP: any, ipType: any, data: any, mode: any): void;
    geoQuery(myIP: any, mode: any): {
        ip: string;
        ipNo: string;
        countryShort: string;
        countryLong: string;
        region: string;
        city: string;
        isp: string;
        domain: string;
        zipCode: string;
        latitude: string;
        longitude: string;
        timeZone: string;
        netSpeed: string;
        iddCode: string;
        areaCode: string;
        weatherStationCode: string;
        weatherStationName: string;
        mcc: string;
        mnc: string;
        mobileBrand: string;
        elevation: string;
        usageType: string;
        addressType: string;
        category: string;
    };
    getAPIVersion(): string;
    getPackageVersion(): number;
    getDatabaseVersion(): string;
    getCountryShort(myIP: any): string;
    getCountryLong(myIP: any): string;
    getRegion(myIP: any): string;
    getCity(myIP: any): string;
    getISP(myIP: any): string;
    getLatitude(myIP: any): string;
    getLongitude(myIP: any): string;
    getDomain(myIP: any): string;
    getZIPCode(myIP: any): string;
    getTimeZone(myIP: any): string;
    getNetSpeed(myIP: any): string;
    getIDDCode(myIP: any): string;
    getAreaCode(myIP: any): string;
    getWeatherStationCode(myIP: any): string;
    getWeatherStationName(myIP: any): string;
    getMCC(myIP: any): string;
    getMNC(myIP: any): string;
    getMobileBrand(myIP: any): string;
    getElevation(myIP: any): string;
    getUsageType(myIP: any): string;
    getAddressType(myIP: any): string;
    getCategory(myIP: any): string;
    getAll(myIP: any): {
        ip: string;
        ipNo: string;
        countryShort: string;
        countryLong: string;
        region: string;
        city: string;
        isp: string;
        domain: string;
        zipCode: string;
        latitude: string;
        longitude: string;
        timeZone: string;
        netSpeed: string;
        iddCode: string;
        areaCode: string;
        weatherStationCode: string;
        weatherStationName: string;
        mcc: string;
        mnc: string;
        mobileBrand: string;
        elevation: string;
        usageType: string;
        addressType: string;
        category: string;
    };
    #private;
}
export class IP2LocationWebService {
    open(apiKey: any, apiPackage: any, useSSL?: boolean): void;
    checkParams(): void;
    lookup(myIP: any, addOn: any, lang: any, callback: any): void;
    getCredit(callback: any): void;
    #private;
}